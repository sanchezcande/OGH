{"version":3,"file":"static/js/573.769f43b9.chunk.js","mappings":"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","sources":["components/Button/Button.js","components/ContactForm/ContactForm.styles.js","components/ContactForm/SuccessModal/SuccessModal.styles.js","components/ContactForm/SuccessModal/SuccessModal.jsx","../node_modules/emailjs-com/es/store/store.js","../node_modules/emailjs-com/es/utils/validateParams.js","../node_modules/emailjs-com/es/models/EmailJSResponseStatus.js","../node_modules/emailjs-com/es/api/sendPost.js","../node_modules/emailjs-com/es/index.js","../node_modules/emailjs-com/es/methods/sendForm/sendForm.js","components/ContactForm/ContactForm.jsx","components/ContactForm/validations.js","pages/ContactUs/ContactUs.styles.js","pages/ContactUs/ContactUs.jsx"],"sourcesContent":["import styled from 'styled-components';\n\n\nexport const LightButton = styled.button`\n  background-color: rgba(21, 62, 108, 0.34);\n  color: ${({ theme }) => theme.colors.secondary};\n  padding: 10px 20px;\n  border: 2px solid #0034EE;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  font-size: 1em;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  \n  &:hover {\n    background-color: #0034EE;\n  }\n`;\n\nexport const DarkButton = styled.button`\n  background-color:  #0034EE;\n  color:   ${({ theme }) => theme.colors.secondary};\n  padding: 10px 20px;\n  border: 2px solid #0034EE;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  font-size: 1em;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    background-color: rgba(21, 62, 108, 0.34);\n    border: 2px solid #0034EE;\n  }\n`;","import styled, { keyframes } from \"styled-components\";\nimport { DarkButton } from \"../Button/Button\";\n\nexport const FormContainer = styled.form`\n  display: flex;\n  flex-direction: column;\n  max-width: 500px;\n  margin: auto;\n`;\n\nconst bounceIn = keyframes`\n  0% {\n    transform: translateY(0);\n  }\n  50% {\n    transform: translateY(-10px);\n  }\n  100% {\n    transform: translateY(0);\n  }\n`;\n\nconst bounceOut = keyframes`\n  0% {\n    transform: translateY(0);\n  }\n  50% {\n    transform: translateY(10px);\n  }\n  100% {\n    transform: translateY(0);\n  }\n`;\n\nexport const Input = styled.input`\n  padding: 10px;\n  margin-bottom: 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  border: 3px solid #333;\n  transition: all 0.3s;\n  background-color: #f0f0f0;\n\n  &::placeholder {\n    color: #999;\n    font-style: italic;\n  }\n\n  &:focus {\n    border-color: #0034ee;\n    outline: none;\n  }\n  &:hover {\n    border-color: #0034ee;\n  }\n\n  &[type=\"number\"] {\n    -moz-appearance: textfield; /* Firefox */\n    appearance: textfield; /* Safari e IE */\n    &::-webkit-outer-spin-button,\n    &::-webkit-inner-spin-button {\n      display: none; /* WebKit */\n    }\n  }\n  &.error {\n    animation: ${bounceIn} 0.5s ease forwards;\n  }\n\n  &.valid {\n    animation: ${bounceOut} 0.5s ease forwards;\n  }\n`;\n\nexport const TextArea = styled.textarea`\n  padding: 10px;\n  margin-bottom: 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  border: 3px solid #333;\n  transition: all 0.3s;\n  background-color: #f0f0f0;\n\n  &::placeholder {\n    color: #999;\n    font-style: italic;\n  }\n\n  &:focus {\n    border-color: #0034ee;\n    outline: none;\n  }\n  &:hover {\n    border-color: #0034ee;\n  }\n  &.error {\n    animation: ${bounceIn} 0.5s ease forwards;\n  }\n\n  &.valid {\n    animation: ${bounceOut} 0.5s ease forwards;\n  }\n`;\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n    max-height: 0;\n  }\n  to {\n    opacity: 1;\n    max-height: 100px; /* Ajusta este valor según sea necesario */\n  }\n`;\n\nconst fadeOut = keyframes`\n  from {\n    opacity: 1;\n    max-height: 100px; /* Ajusta este valor según sea necesario */\n  }\n  to {\n    opacity: 0;\n    max-height: 0;\n  }\n`;\n\nexport const Error = styled.div`\n  color: white;\n  margin-bottom: 10px;\n  font-size: 10px;\n  margin-left: 10px;\n  opacity: 0;\n  max-height: 0;\n  overflow: hidden;\n  transition: max-height 0.3s ease;\n\n  &.visible {\n    opacity: 1;\n    max-height: 100px;\n    animation: ${fadeIn} 0.3s forwards;\n  }\n\n  &.hidden {\n    opacity: 0;\n    max-height: 0;\n    animation: ${fadeOut} 0.3s forwards;\n  }\n`;\n\nexport const StyledButton = styled(DarkButton)`\n  display: inline-block;\n  &.error {\n    animation: ${bounceIn} 0.5s ease forwards;\n  }\n\n  &.valid {\n    animation: ${bounceOut} 0.5s ease forwards;\n  }\n`;\n","import styled from 'styled-components';\n\nconst ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ModalContent = styled.div`\n  background: white;\n  padding: 20px;\n  border-radius: 10px;\n  text-align: center;\n  max-width: 500px;\n  width: 90%;\n`;\n\nconst CloseButton = styled.button`\n  background: #3498db;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 5px;\n  cursor: pointer;\n  margin-top: 10px;\n  &:hover {\n    background: #2980b9;\n  }\n`;\n\nexport { ModalOverlay, ModalContent, CloseButton };","import React from 'react';\nimport { ModalOverlay, ModalContent, CloseButton } from './SuccessModal.styles';\n\nconst SuccessModal = ({ message, onClose }) => (\n  <ModalOverlay>\n    <ModalContent>\n      <h2>Send!</h2>\n      <p>{message}</p>\n      <CloseButton onClick={onClose}>Cerrar</CloseButton>\n    </ModalContent>\n  </ModalOverlay>\n);\n\nexport default SuccessModal;\n","export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (userID, serviceID, templateID) => {\n    if (!userID) {\n        throw 'The user ID is required. Visit https://dashboard.emailjs.com/admin/integration';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, userID) => {\n    const uID = userID || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.2.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import React, { useState } from \"react\";\nimport { validateEmail, validateName, validateMessage } from \"./validations\";\nimport {\n  Input,\n  TextArea,\n  Error,\n  FormContainer,\n  StyledButton,\n  \n} from \"./ContactForm.styles\";\nimport SuccessModal from \"./SuccessModal/SuccessModal\";\nimport emailjs from \"emailjs-com\";\n\nconst ContactForm = () => {\n  const initialFormData = {\n    from_name: \"\",\n    from_email: \"\",\n    contact_number: \"\",\n    subject: \"\",\n    message: \"\",\n  };\n  const [formStatus, setFormStatus] = useState(\"\");\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [formData, setFormData] = useState(initialFormData);\n\n  function validateForm() {\n    const newErrors = {};\n    if (!validateName(formData.from_name)) {\n      newErrors.from_name = \"Please enter a valid name\";\n    } else {\n      delete newErrors.from_name;\n    }\n    if (!validateEmail(formData.from_email)) {\n      newErrors.from_email = \"Please enter a valid email address\";\n    } else {\n     delete newErrors.from_email;\n    }\n    if (!validateMessage(formData.message)) {\n      newErrors.message = \"Please enter a message with more than 10 characters\";\n    } else {\n      delete newErrors.message;\n    }\n    setErrors(newErrors);\n    return newErrors;\n  }\n\nconst handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n    validateForm(); \n  };\n\n  function sendEmail(e) {\n    e.preventDefault();\n\n    const formData = {\n      from_name: e.target.from_name.value,\n      from_email: e.target.from_email.value,\n      contact_number: e.target.contact_number.value,\n      subject: e.target.subject.value,\n      message: e.target.message.value,\n    };\n\n    const formErrors = validateForm(formData);\n\n    if (Object.keys(formErrors).length === 0) {\n      emailjs\n        .sendForm(\n          \"service_jk13omy\",\n          \"template_k5rhtkf\",\n          e.target,\n          \"DMk76Fu8oF26N7Yse\"\n        )\n        .then(\n          (result) => {\n            setFormStatus(\"Message sent successfully\");\n            setIsModalOpen(true);\n          },\n          (error) => {\n            setFormStatus(\"Error sending message\");\n            setIsModalOpen(true);\n            console.log(error.text);\n          }\n        );\n    } else {\n      setErrors(formErrors);\n    }\n  }\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <div>\n      <FormContainer className=\"contact-form\" onSubmit={sendEmail} noValidate>\n        <Input\n          type=\"text\"\n          name=\"from_name\"\n          placeholder=\"Name\"\n          onChange={handleInputChange}\n          className={errors.from_name ? \"error\" : \"valid\"}\n        />\n        {errors.from_name && (\n          <Error className={errors.from_name ? \"visible\" : \"hidden\"}>\n            {errors.from_name}\n          </Error>\n        )}\n        <Input\n          type=\"email\"\n          name=\"from_email\"\n          placeholder=\"Email\"\n          onChange={handleInputChange}\n          className={errors.from_email ? \"error\" : \"valid\"}\n        />\n        {errors.from_email && (\n          <Error className={errors.from_email ? \"visible\" : \"hidden\"}>\n            {errors.from_email}\n          </Error>\n        )}\n        <Input\n          type=\"number\"\n          name=\"contact_number\"\n          placeholder=\"Phone number (optional)\"\n        />\n        <Input type=\"text\" name=\"subject\" placeholder=\"Subject (optional)\" />\n        <TextArea\n          name=\"message\"\n          placeholder=\"Message\"\n          onChange={handleInputChange}\n          className={errors.message ? \"error\" : \"valid\"}\n        />\n        {errors.message && (\n          <Error className={errors.message ? \"visible\" : \"hidden\"}>\n            {errors.message}\n          </Error>\n        )}\n\n        <StyledButton\n          className={errors.message ? \"error\" : \"valid\"}\n          type=\"submit\"\n        >\n          Send\n        </StyledButton>\n      </FormContainer>\n      {isModalOpen && (\n        <SuccessModal message={formStatus} onClose={closeModal} />\n      )}\n      {formStatus && !formStatus.includes(\"successfully\") && (\n        <Error className=\"visible\">{formStatus}</Error>\n      )}\n    </div>\n  );\n};\n\nexport default ContactForm;\n","export const validateName = (name) => {\n    return name && name.length > 2;\n  };\n  \n  export const validateEmail = (email) => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n  \n  export const validateMessage = (message) => {\n    return message && message.length > 10;\n  };","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 50px;\n\n    h1 {\n        text-align: center;\n        font-size: 40px;\n        font-weight: 700;\n        margin-bottom: 10px;\n    }\n    h2 {\n        text-align: center;\n        font-size: 30;\n        margin-bottom: 20px;\n        color: #828282;\n        font-weight: 400;\n        margin-bottom: 40px;\n    }\n\n    `;","import ContactForm from '../../components/ContactForm/ContactForm';\nimport React from 'react';\nimport { Container } from './ContactUs.styles';\n\nconst ContactUs = React.forwardRef((props, ref) => {\n  return (\n    <Container ref={ref}>\n       <div style={{ marginBottom: '20px' }} /> \n        <h1>Have a Question? Reach Out!</h1>\n        <h2>Thank you for contacting us! Please fill out the form below and we'll get back to you shortly.</h2>\n    <ContactForm />\n    </Container>\n  );\n})\n\nexport default ContactUs;"],"names":["LightButton","styled","button","_templateObject","_taggedTemplateLiteral","_ref","theme","colors","secondary","DarkButton","_templateObject2","_ref2","FormContainer","form","bounceIn","keyframes","bounceOut","_templateObject3","Input","input","_templateObject4","TextArea","textarea","_templateObject5","fadeIn","_templateObject6","fadeOut","_templateObject7","Error","div","_templateObject8","StyledButton","_templateObject9","ModalOverlay","ModalContent","CloseButton","message","onClose","_jsx","children","_jsxs","onClick","store","_origin","validateParams","userID","serviceID","templateID","EmailJSResponseStatus","constructor","httpResponse","this","status","text","responseText","sendPost","url","data","headers","arguments","length","undefined","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","target","responseStatus","open","Object","keys","forEach","key","setRequestHeader","send","sendForm","uID","_userID","currentForm","document","querySelector","nodeName","findHTMLForm","formData","FormData","append","ContactForm","formStatus","setFormStatus","useState","isModalOpen","setIsModalOpen","errors","setErrors","setFormData","from_name","from_email","contact_number","subject","validateForm","newErrors","name","email","test","handleInputChange","e","value","className","onSubmit","preventDefault","formErrors","emailjs","then","result","error","console","log","noValidate","type","placeholder","onChange","SuccessModal","closeModal","includes","Container","React","props","ref","style","marginBottom"],"sourceRoot":""}